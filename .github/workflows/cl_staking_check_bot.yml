name: Staking Pool Alert Bot

on:
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes
  workflow_dispatch:

jobs:
  staking_pool_alert_job:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Restore cache
        uses: actions/cache@v3
        id: cache
        with:
          path: last_posted.txt
          key: staking-alert-cache

      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 1) Install Chromium dependencies
      - name: Install Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gconf-service \
            libasound2 \
            libatk1.0-0 \
            libc6 \
            libcairo2 \
            libcups2 \
            libdbus-1-3 \
            libexpat1 \
            libfontconfig1 \
            libgcc1 \
            libgdk-pixbuf2.0-0 \
            libglib2.0-0 \
            libgtk-3-0 \
            libnspr4 \
            libpango-1.0-0 \
            libpangocairo-1.0-0 \
            libstdc++6 \
            libx11-6 \
            libx11-xcb1 \
            libxcb1 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            ca-certificates \
            fonts-liberation \
            libappindicator1 \
            libnss3 \
            lsb-release \
            xdg-utils \
            wget

      - name: Install Python dependencies
        run: |
          pip install requests requests_oauthlib pyppeteer pillow

      # 2) Pre-download Chromium by launching Pyppeteer once
      - name: Pre-download Chromium
        run: |
          python -c "import asyncio; from pyppeteer import launch; \
          asyncio.get_event_loop().run_until_complete(launch(args=['--no-sandbox','--disable-setuid-sandbox','--disable-gpu','--disable-dev-shm-usage']))"

      - name: Run staking pool alert bot
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
          ACCESS_TOKEN_BOT: ${{ secrets.ACCESS_TOKEN_BOT }}
          ACCESS_TOKEN_SECRET_BOT: ${{ secrets.ACCESS_TOKEN_SECRET_BOT }}
        run: python cl_staking_check_bot.py

      - name: Upload screenshot artifacts
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: |
            screenshot.png
            cropped_screenshot.png

      - name: Save cache
        if: always()
        uses: actions/cache@v3
        with:
          path: last_posted.txt
          key: staking-alert-cache
